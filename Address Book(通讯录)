//linkman.h
#pragma once

#ifndef __linkman

#ifndef __STDIO_H
#include <stdio.h>
#endif

#ifndef __STDLIB_H
#include <stdlib.h>
#endif

#ifndef __STRING_H
#include <string.h>
#endif

#ifndef __MAX
#define MAX 1000
#endif


typedef struct LinkMan
{
	char name[10];
	char sex[3];
	char age[3];
	char tel[12];
	char addr[20];
}LinkMan;

void menu()
{
	printf("\n");
	printf(">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\n");
	printf(">>*       1.添加联系人       *<<\n");
	printf(">>*       2.删除联系人       *<<\n");
	printf(">>*       3.查找联系人       *<<\n");
	printf(">>*       4.修改联系人       *<<\n");
	printf(">>*       5.显示联系人       *<<\n");
	printf(">>*       6.清空联系人       *<<\n");
	printf(">>*       7.排序联系人       *<<\n");
	printf(">>*       0.结束程序         *<<\n");
	printf("<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\n");
}

void Add(LinkMan *linkman, int *count)   //添加联系人
{
	if ((*count) < MAX)
	{
		printf("请输入要添加的联系人姓名:> ");
		scanf("%s", (linkman + (*count))->name);
		printf("请输入要添加的联系人性别:> ");
		scanf("%s", (linkman + (*count))->sex);
		printf("请输入要添加联系人的年龄:> ");
		scanf("%s", (linkman + (*count))->age);
		printf("请输入要添加联系人的电话:> ");
		scanf("%s", (linkman + (*count))->tel);
		printf("请输入要添加联系人的地址:> ");
		scanf("%s", (linkman + (*count))->addr);
		(*count)++;
	}
	else
	{
		printf("联系人已满，不能再添加联系人！\n");
	}
}

void Delete(LinkMan *linkman, int *count)   //删除联系人
{
	if ((*count) <= 0)
	{
		printf("通讯录中还没有添加联系人！\n");
	}
	else
	{
		char name_t[10];
		int i = 0;
		printf("请输入要删除的联系人姓名:> ");
		scanf("%s", name_t);
		for (i = 0;i < (*count);i++)
		{ 
			if (strcmp((linkman + (*count))->name, name_t) == 0)
			{
				while (i <= (*count))
				{
					strcpy(((linkman + i)->name), ((linkman + i + 1)->name));
					strcpy(((linkman + i)->sex), ((linkman + i + 1)->sex));
					strcpy(((linkman + i)->tel), ((linkman + i + 1)->tel));
					strcpy(((linkman + i)->addr), ((linkman + i + 1)->addr));
					strcpy(((linkman + i)->age) ,((linkman + i + 1)->age));
					i++;
				}
			}
		}
	}
}

void Find(LinkMan *linkman, int count)   //查找联系人
{
	char name_t[10];
	int i = 0;
	printf("请输入要查找的联系人姓名:> ");
	scanf("%s", name_t);
	for (i = 0;i < count;i++)
	{
		if ((strcmp(((linkman + i)->name), name_t)) == 0)
		{
			printf("您要查找的联系人信息如下;> ");
			printf("*姓名;> %s\n", (linkman + i)->name);
			printf("*性别;> %s\n", (linkman + i)->sex);
			printf("*年龄;> %s\n", (linkman + i)->age);
			printf("*电话;> %s\n", (linkman + i)->tel);
			printf("*地址:> %s\n", (linkman + i)->addr);
		}
		else
		{
			printf("未找到您查找的联系人！\n");
		}
	}
}

void Alter(LinkMan *linkman, int count)   //修改联系人
{
	char name_t[10];
	int i = 0;
	printf("请输入要修改的联系人姓名;> ");
	scanf("%s", name_t);
	for (i = 0;i < count;i++)
	{
		if (strcmp((linkman + i)->name, name_t) == 0)
		{
			printf("请输入修改后该联系人的姓名:> ");
			scanf("%s", (linkman + i)->name);
			printf("请输入修改后该联系人的性别:> ");
			scanf("%s", (linkman + i)->sex);
			printf("请输入修改后该联系人的年龄;> ");
			scanf("%s", (linkman + i)->age);
			printf("请输入修改后该联系人的电话:> ");
			scanf("%s", (linkman + i)->tel);
			printf("请输入修改后该联系人的地址;> ");
			scanf("%s", (linkman + i)->addr);
			printf("修改完成！");
		}
		else
		{
			printf("未找到您要修改的联系人！\n");
		}
	}
}

void Show(LinkMan *linkman, int count)   //显示联系人
{
	int i = 0;
	if (count == 0)
	{
		printf("您的通讯录中没有联系人！\n");
	}
	else
	{
		printf("所有联系人的信息如下:> \n");
		printf("=========================================\n");
		for (i = 0;i < count;i++)
		{
			printf("<<< %d >>>", count + 1);
			printf("*姓名:> %s\n", (linkman + i)->name);
			printf("*性别;> %s\n", (linkman + i)->sex);
			printf("*年龄:> %s\n", (linkman + i)->age);
			printf("*电话:> %s\n", (linkman + i)->tel);
			printf("*地址:> %s\n", (linkman + i)->addr);
			printf("\n");
		}
		printf("=========================================\n");
	}
}

void Sort(LinkMan *linkman,int count)   //排序联系人
{
	int i = 0;
	int j = 0;
	for (i = 0;i < count;i++);
	{
		for (j = 0;j < count - i;j++)
		{
			if(strcmp((linkman + j)->name, (linkman + j + 1)->name)>0);
			{
			    *(linkman + count) = *(linkman + j);
				*(linkman + j) = *(linkman + j + 1);
				*(linkman + j + 1) = *(linkman + count);
			}
		}
	}
}

void Empty(LinkMan *linkman, int count)   //清空联系人
{
	if (count == 0)
	{
		printf("已清空所有联系人！\n");
	}
	else
	{
		while (count)
		{
			*(linkman + count)->name = NULL;
			*(linkman + count)->sex = NULL;
			*(linkman + count)->age = NULL;
			*(linkman + count)->tel = NULL;
			*(linkman + count)->addr = NULL;
			count--;
		}
	}
}
#endif


//Test.c
#define _CRT_SECURE_NO_WARNINGS 1

#include "linkman.h"

#define MAX 1000

int main()
{
	int input = 1;
	int count = 0;
	LinkMan linkman[MAX];
	menu();
	while (input)
	{
		printf("请输入您想要的操作序号;> ");
		scanf("%d", &input);
		switch (input)
		{
		case 1:
			Add(linkman, &count);
			break;
		case 2:
			Delete(linkman, &count);
			break;
		case 3:
			Find(linkman, count);
			break;
		case 4:
			Alter(linkman, count);
			break;
		case 5:
			Sort(linkman, count);
			break;
		case 6:
			Empty(linkman, count);
			break;
		case 0:
			return 0;
			break;
		default:
			printf("请选择正确的操作！\n");
			break;
		}
	}
	printf("\n");
	system("pause");
	return 0;
}
